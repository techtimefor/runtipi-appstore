services:
  wg-easy:
    container_name: wg-easy
    image: ghcr.io/wg-easy/wg-easy:15
    restart: unless-stopped
    volumes:
      - ${APP_DATA_DIR}/data:/etc/wireguard
    ports:
      - 51820:51820/udp
      - ${APP_PORT}:51821/tcp
    environment:
      - WG_HOST=${WIREGUARD_HOST}
      - PASSWORD_HASH=${WIREGUARD_PASSWORD_HASH}
      - WG_DEFAULT_DNS=${WIREGUARD_DNS:-8.8.8.8}
      - WG_ALLOWED_IPS=0.0.0.0/0, ::/0
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.conf.all.src_valid_mark=1
      - net.ipv4.ip_forward=1
    networks:
      - tipi_main_network
    labels:
      traefik.enable: true
      traefik.http.middlewares.wg-easy-web-redirect.redirectscheme.scheme: https
      traefik.http.services.wg-easy.loadbalancer.server.port: 51821
      traefik.http.routers.wg-easy-insecure.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.wg-easy-insecure.entrypoints: web
      traefik.http.routers.wg-easy-insecure.service: wg-easy
      traefik.http.routers.wg-easy-insecure.middlewares: wg-easy-web-redirect
      traefik.http.routers.wg-easy.rule: Host(`${APP_DOMAIN}`)
      traefik.http.routers.wg-easy.entrypoints: websecure
      traefik.http.routers.wg-easy.service: wg-easy
      traefik.http.routers.wg-easy.tls.certresolver: myresolver
      traefik.http.routers.wg-easy-local-insecure.rule: Host(`wg-easy.${LOCAL_DOMAIN}`)
      traefik.http.routers.wg-easy-local-insecure.entrypoints: web
      traefik.http.routers.wg-easy-local-insecure.service: wg-easy
      traefik.http.routers.wg-easy-local-insecure.middlewares: wg-easy-web-redirect
      traefik.http.routers.wg-easy-local.rule: Host(`wg-easy.${LOCAL_DOMAIN}`)
      traefik.http.routers.wg-easy-local.entrypoints: websecure
      traefik.http.routers.wg-easy-local.service: wg-easy
      traefik.http.routers.wg-easy-local.tls: true
      runtipi.managed: true
[bob@piboi wg-easy]$ cat config.json
{
  "$schema": "../app-info-schema.json",
  "name": "Wireguard",
  "available": true,
  "exposable": true,
  "dynamic_config": true,
  "port": 8082,
  "id": "wg-easy",
  "tipi_version": 13,
  "version": "15",
  "categories": ["network"],
  "description": "Access your homeserver from anywhere even on your mobile device. Wireguard-easy is a simple tool to configure and manage Wireguard VPN servers. It is written in Go and uses the official Wireguard client. You have to open and redirect port 51820 to your homeserver in order to connect.",
  "short_desc": "VPN server for your homeserver.",
  "author": "WeeJeWel",
  "source": "https://github.com/wg-easy/wg-easy",
  "form_fields": [
    {
      "type": "fqdnip",
      "label": "Your public IP address or domain name",
      "required": true,
      "env_variable": "WIREGUARD_HOST"
    },
    {
      "type": "password",
      "label": "Password hash (bcrypt)",
      "hint": "Choose a password and use https://bcrypt-generator.com/ to hash your password, then add an additional dollar sign ($) next to every existing one in your generated hash. Leave empty for no password.",
      "required": false,
      "env_variable": "WIREGUARD_PASSWORD_HASH"
    },
    {
      "type": "ip",
      "label": "Default DNS server",
      "required": false,
      "env_variable": "WIREGUARD_DNS"
    }
  ],
  "supported_architectures": ["arm64", "amd64"],
  "created_at": 1691943801422,
  "updated_at": 1748547804480,
  "force_pull": false
}